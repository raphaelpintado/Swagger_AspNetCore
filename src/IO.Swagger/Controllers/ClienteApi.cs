/*
 * ByteBank Api
 *
 * Administra a movimentação bancária do correntista e controla o acesso através de CPF e senha.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: suporte@bytebankapi.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ClienteApiController : ControllerBase
    { 
        /// <summary>
        /// Cadastra Cliente
        /// </summary>
        /// <remarks>Cadastra um novo cliente</remarks>
        /// <param name="cliente_"></param>
        /// <response code="201">Cadastro efetuado com sucesso</response>
        /// <response code="400">Requisição inválida</response>
        /// <response code="500">Erro interno no servidor</response>
        [HttpPost]
        [Route("/bytebank-api/v1/cliente")]
        [Authorize(AuthenticationSchemes = BasicAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("CadastraCliente")]
        [SwaggerResponse(statusCode: 201, type: typeof(Cliente), description: "Cadastro efetuado com sucesso")]
        public virtual IActionResult CadastraCliente([FromBody]Cliente cliente_)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(Cliente));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);

            string exampleJson = null;
            exampleJson = "{\n  \"senha\" : \"senha123\",\n  \"cpf\" : \"01234567890\",\n  \"conta\" : [ {\n    \"transacoes\" : [ {\n      \"tipo\" : \"debito\",\n      \"data\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"valor\" : 6.027456183070403,\n      \"id\" : 0\n    }, {\n      \"tipo\" : \"debito\",\n      \"data\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"valor\" : 6.027456183070403,\n      \"id\" : 0\n    } ],\n    \"numero\" : 784563,\n    \"saldo\" : 101.34,\n    \"agencia\" : 975,\n    \"digito\" : 7\n  }, {\n    \"transacoes\" : [ {\n      \"tipo\" : \"debito\",\n      \"data\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"valor\" : 6.027456183070403,\n      \"id\" : 0\n    }, {\n      \"tipo\" : \"debito\",\n      \"data\" : \"2000-01-23T04:56:07.000+00:00\",\n      \"valor\" : 6.027456183070403,\n      \"id\" : 0\n    } ],\n    \"numero\" : 784563,\n    \"saldo\" : 101.34,\n    \"agencia\" : 975,\n    \"digito\" : 7\n  } ],\n  \"id\" : 234,\n  \"titular\" : \"Janete Silva\"\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Cliente>(exampleJson)
            : default(Cliente);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
