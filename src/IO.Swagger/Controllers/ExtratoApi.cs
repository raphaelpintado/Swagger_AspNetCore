/*
 * ByteBank Api
 *
 * Administra a movimentação bancária do correntista e controla o acesso através de CPF e senha.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: suporte@bytebankapi.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ExtratoApiController : ControllerBase
    { 
        /// <summary>
        /// Consulta Extrato
        /// </summary>
        /// <remarks>Consulta o extrato da conta do cliente.</remarks>
        /// <param name="agencia"></param>
        /// <param name="numero"></param>
        /// <param name="digito"></param>
        /// <param name="authorization"></param>
        /// <response code="200">Consulta de extrato efetuada com sucesso</response>
        /// <response code="400">Requisição inválida</response>
        /// <response code="401">Requisição não autorizada</response>
        /// <response code="500">Erro no servidor</response>
        [HttpGet]
        [Route("/bytebank-api/v1/extrato/{agencia}/{numero}/{digito}")]
        [Authorize(AuthenticationSchemes = BasicAuthenticationHandler.SchemeName)]
        [ValidateModelState]
        [SwaggerOperation("ConsultaExtrato")]
        [SwaggerResponse(statusCode: 200, type: typeof(Extrato), description: "Consulta de extrato efetuada com sucesso")]
        public virtual IActionResult ConsultaExtrato([FromRoute][Required]int? agencia, [FromRoute][Required]long? numero, [FromRoute][Required]int? digito, [FromHeader][Required()]string authorization)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Extrato));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);

            string exampleJson = null;
            exampleJson = "{\n  \"transacoes\" : [ {\n    \"tipo\" : \"debito\",\n    \"data\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"valor\" : 6.027456183070403,\n    \"id\" : 0\n  }, {\n    \"tipo\" : \"debito\",\n    \"data\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"valor\" : 6.027456183070403,\n    \"id\" : 0\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Extrato>(exampleJson)
            : default(Extrato);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
